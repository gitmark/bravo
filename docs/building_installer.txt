https://robots.thoughtbot.com/the-magic-behind-configure-make-make-install

autotools
autoconf
automake
Gnulib
Libtool

https://www.gnu.org/software/autoconf/manual/autoconf.html

wget and curl are installed on ubuntu by default

http://askubuntu.com/questions/430706/installing-autotools-autoconf
http://askubuntu.com/questions/290194/how-to-install-autoconf

sudo apt update
sudo apt install autoconf
sudo apt install libtool-bin

https://www.gnu.org/software/automake/manual/html_node/Hello-World.html

Excellent link ...
https://www.gnu.org/software/automake/manual/html_node/Creating-amhello.html#Creating-amhello
https://www.gnu.org/software/libtool/manual/html_node/Using-libtool.html
http://www.adp-gmbh.ch/cpp/gcc/create_lib.html
http://stackoverflow.com/questions/2734719/how-to-compile-a-static-library-in-linux
http://tldp.org/HOWTO/Program-Library-HOWTO/static-libraries.html
http://www.cs.dartmouth.edu/~campbell/cs50/buildlib.html
http://cs-fundamentals.com/c-programming/static-and-dynamic-linking-in-c.php

gcc -Wall -fPIC -c sub.c
gcc -shared -o libheymath.so add.o sub.o

copy the library into one of the standard directories (e.g., /usr/lib) and run ldconfig command.

You can list the shared library dependencies which your executable is dependent upon. The ldd <name-of-executable> command does that for you.
[root@host ~]# ldd addition 

google gcc create static dynamic library
http://stackoverflow.com/questions/5604061/making-gcc-prefer-static-libs-to-shared-objects-when-linking
http://www.xappsoftware.com/wordpress/2012/12/20/how-to-create-a-shared-library-on-mac-os-x-using-gcc/

gcc -dynamiclib -o libhello.dylib -dy helloworld.c 

https://developer.apple.com/library/content/documentation/Porting/Conceptual/PortingUnix/compiling/compiling.html
http://stackoverflow.com/questions/14173260/creating-shared-libraries-in-c-for-osx
http://stackoverflow.com/questions/3532589/how-to-build-a-dylib-from-several-o-in-mac-os-x-using-gcc
https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/CreatingDynamicLibraries.html
https://www.gnu.org/software/libtool/manual/html_node/Creating-object-files.html#Creating-object-files
https://www.gnu.org/software/automake/manual/html_node/A-Library.html
https://www.gnu.org/software/automake/manual/html_node/A-Shared-Library.html#A-Shared-Library
https://www.gnu.org/software/automake/manual/html_node/index.html#SEC_Contents

brew install autoconf automake libtool

http://stackoverflow.com/questions/7582700/hello-world-library-using-autotools

Good link
https://www.gnu.org/software/automake/manual/html_node/A-Library.html
https://www.gnu.org/software/automake/manual/html_node/Headers.html
https://www.gnu.org/software/autoconf/manual/autoconf-2.63/html_node/Installation-Directory-Variables.html
https://www.gnu.org/prep/standards/html_node/Directory-Variables.html
http://mij.oltrelinux.com/devel/autoconf-automake/

libdir = $(prefix)/hello/0.0.1/lib
lib_LIBRARIES = libhello.a
libhello_a_SOURCES = main.c

autotest
http://check.sourceforge.net/doc/check_html/check_3.html
http://junit.sourceforge.net/doc/testinfected/testing.htm

google chrome testsuite autotest
https://www.chromium.org/chromium-os/testing/test-suites

https://guiquanz.gitbooks.io/google-cc-style-guide/content/ebook/Naming.html

https://www.lrde.epita.fr/~akim/ccmp/doc/gnuprog2/The-GNU-M4-Test-Suite.html#The%20GNU%20M4%20Test%20Suite

http://git.net/ml/autoconf-gnu/2013-03/msg00008.html


